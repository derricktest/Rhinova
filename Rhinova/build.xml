<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="run" name="Create Runnable Jar for Project Rhinova with libraries in sub-folder">
	
	
	<!-- 
	ANT SCRIPT FOR RHINOVA PROJECT
	
	This script can be used to compile source code, run tests, create java doc, distrubute
	the project into a runnable jar and run the jar.
	 -->
	
	
	
	
	<!-- PROPERTIES USED IN THE BUILD -->
	
	<!-- FOLDER PROPERTIES -->
	<property name="release.dir" 		value="release"/>
	<property name="jar.name" 			value="rhinova.jar"/>
	<property name="jar.path" 			value="${release.dir}/${jar.name}"/>
	<property name="classes.dir" 		value="bin"/>
	<property name="lib.path" 			value="${release.dir}/rhinova_lib"/>
	<property name="spring.xml.file" 	value="Spring.xml"/>
	<property name="docs.dir" 			value="doc" />
	<property name="code.src" 			value="src"/>
	<property name="src.dir" 			value="${code.src}; test;" />
	<property name="manifest-version"   value="1.01" />
	<property name="main.class" 		value="rhinova.RhinovaLauncher" />
		
	<!-- CLASS PATH OF APPLICATION -->
	
	<!-- COMPILE CLASS PATH -->
    <path id="classpath">
        <fileset dir="${lib.path}" includes="*.*"/>
    </path>	
	
	<!-- JAR CLASS PATH -->
	<manifestclasspath property="manifest.classpath" jarfile="${jar.path}">
	    <classpath refid="classpath"/>
	</manifestclasspath>
	
	<!-- JUNIT PROPERTIES -->
	<property name="test.dir" location="test" />
	<property name="test.report.dir" location="testreport" />
	
	  <path id="junit.class.path">
	    <pathelement location="${jar.path}" />
	  	<pathelement location="${classes.dir}"/>
	  </path>

	
	<!-- CLEANING BINDARY FOLDERS -->
	<target name="clean" description="Cleans the folders which contain files generated from the build.">
		<mkdir dir="bin"/>
		<delete dir="bin"/>
		<mkdir dir="${test.report.dir}"/>
	</target>
		
	
	<!-- COPYING NEEDED FILES TO THE BINARY DIRECTORY FOR JARING -->
    <target name="copy" description="Copy files which are not java source files but needed in the bin directory to be included in the jar.">
		<!-- SPRING CONFIGURATION FILE -->
		<copy file="src/${spring.xml.file}" todir="${classes.dir}"/>
    	<copy todir="${classes.dir}">
    		<fileset dir="src">
    			<exclude name="**/*.java"/>
    		</fileset>
    	</copy>
    </target>

		
	<!-- COMPILING THE JAVA SOURCE CODE -->
    <target name="compile" depends="clean,copy" description="Compile the java source code into .class files located in the bin directory.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath">
    	</javac>
    </target>
	
	
	<!-- RUNNING UNIT TESTS -->
	  <target name="junit" depends="compile" description="Run the unit tests of the project.">
	    <junit printsummary="on" fork="true" haltonfailure="yes">
	      <classpath refid="junit.class.path" />
	      <formatter type="xml" />
	      <batchtest todir="${test.report.dir}">
	        <fileset dir="${test.dir}">
	          <include name="**/*Test*.java" />
	        </fileset>
	      </batchtest>
	    </junit>
	  </target>
	
	
	  <!-- CREATING JAVADOC -->
	  <target name="docs" depends="compile" description="Create the javadoc for the project.">
	    <javadoc packagenames="src" sourcepath="${code.src}" destdir="${docs.dir}">
	       <fileset dir="${code.src}">
	                <include name="**/*.java" />
	           </fileset>
	    </javadoc>
	  </target>
	
	
	<!-- PACKAGING THE JAVA SOURCE CODE INTO A JAR -->
    <target name="jar" depends="compile" description="Package the application into a runnable jar.">
    	<delete file="${jar.path}"/>
        <jar destfile="${jar.path}">
            <manifest>
            	<attribute name="Class-Path"		value="${manifest.classpath}"/>
                <attribute name="Main-Class" 		value="${main.class}"/>
            	<attribute name="Manifest-Version" 	value="${manifest-version}"/>
            	<attribute name="Created-By" 		value="${ant.java.version}"/>
            </manifest>
        	<fileset dir="${classes.dir}"/>
        </jar>
    </target>
	
	
	<!-- RUNNING THE APPLCIATION -->
    <target name="run" depends="jar" description="Run the jar file.">
        <java jar="${jar.path}" fork="true"/>
    </target>
	
	
	<!-- RUNNING THE APPLCIATION -->
	<target name="all" depends="junit,docs,run" description="Task to force the completion of all tasks in the project."/>
	
	
	
	</project>
